(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{207:function(e,n,t){"use strict";t.r(n);var r={components:{Layout:t(172).a}},o=t(14),component=Object(o.a)(r,(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("Layout",{attrs:{title:"DataBase",description:"Database in JsStore is an object which contains name of database and list of tables.",keywords:"database, initiate, create database, indexeddb, jsstore",contentSrc:"/home/travis/build/ujjwalguptaofficial/jsstore.docs/out/content/tutorial/database/index.md"}},[t("p",[e._v("In order to create the database in indexeddb, you need to perform two steps - ")]),e._v(" "),t("h3",{attrs:{id:"1createdatabaseschema"}},[e._v("1. Create database schema")]),e._v(" "),t("p",[e._v("Database schema is an object which contains name of database and list of tables.")]),e._v(" "),t("h4",{attrs:{id:"syntax"}},[e._v("Syntax :-")]),e._v(" "),t("pre",[t("code",[e._v('var database = {\n    name: "database name",\n    tables: [table1, table2, table3]\n}\n')])]),e._v(" "),t("h4",{attrs:{id:"example"}},[e._v("Example :-")]),e._v(" "),t("pre",[t("code",[e._v('var tblProduct = {\n    name: \'Product\',\n    columns: {\n        // Here "Id" is name of column \n        Id:{ primaryKey: true, autoIncrement: true },\n        ItemName:  { notNull: true, dataType: "string" },\n        Price:  { notNull: true, dataType: "number" },\n        Quantity : { notNull: true, dataType: "number" }\n    }\n};\n\nvar tblOrder = {\n    name: \'Order\',\n    columns: {\n        // Here "OrderId" is name of column \n        OrderId:{ primaryKey: true, autoIncrement: true }\n    }\n};\n\nvar db = {\n      name: dbName,\n      tables: [tblProduct, tblOrder]\n}\n')])]),e._v(" "),t("h3",{attrs:{id:"2callinitdb"}},[e._v("2. Call "),t("code",[e._v("initDb")])]),e._v(" "),t("h4",{attrs:{id:"example-1"}},[e._v("Example :-")]),e._v(" "),t("pre",[t("code",[e._v('// initiate jsstore connection\nvar connection = new JsStore.Connection();\n\n// step1 - create database schema\nvar tblProduct = {\n    name: \'Product\',\n    columns: {\n        // Here "Id" is name of column \n        Id:{ primaryKey: true, autoIncrement: true },\n        ItemName:  { notNull: true, dataType: "string" },\n        Price:  { notNull: true, dataType: "number" },\n        Quantity : { notNull: true, dataType: "number" }\n    }\n};\n\nvar tblOrder = {\n    name: \'Order\',\n    columns: {\n        // Here "OrderId" is name of column \n        OrderId:{ primaryKey: true, autoIncrement: true }\n    }\n};\n\nvar db = {\n      name: dbName,\n      tables: [tblProduct, tblOrder]\n}\n\n// step 2\nvar isDbCreated = await connection.initDb(db);\n// isDbCreated will be true when database will be initiated for first time\n\nif(isDbCreated){\n    alert(\'Db Created & connection is opened\');\n}\nelse{\n    alert(\'Connection is opened\');\n}\n\n// since connection is opened now, you can call apis.\n')])]),e._v(" "),t("p",{staticClass:"text-center"},[t("a",{staticClass:"btn info",attrs:{target:"_blank",href:"https://github.com/ujjwalguptaofficial/jsstore-examples/blob/93a178ec8926151b144b064841c20647366d125f/simple_example/scripts/index.js#L12"}},[e._v("Example")])])])}),[],!1,null,null,null);n.default=component.exports}}]);