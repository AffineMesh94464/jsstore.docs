(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{190:function(e,n,t){"use strict";t.r(n);var o={components:{Layout:t(172).a}},r=t(14),component=Object(r.a)(o,(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("Layout",{attrs:{title:"Event",description:"clear api removes all records from a table.",keywords:"event, on, off, indexeddb, jsstore",contentSrc:"/home/runner/work/jsstore.docs/jsstore.docs/content/tutorial/event.md"}},[t("p",[e._v('jsstore provides some events which can be subscribed using "on" & unsubscribed using "off"')]),e._v(" "),t("p",[e._v("e.g -")]),e._v(" "),t("pre",[t("code",[e._v('connection.on(<event name>,()=>{\n    console.log("request queue is empty);\n});\n')])]),e._v(" "),t("h2",{attrs:{id:"listofevents"}},[e._v("List of events -")]),e._v(" "),t("h3",{attrs:{id:"open"}},[e._v("open")]),e._v(" "),t("p",[e._v("Called when database connection is opened.event is called with database as parameter.")]),e._v(" "),t("pre",[t("code",[e._v('connection.on("open",(db)=>{\n    console.log("connection opened", db);\n});\n')])]),e._v(" "),t("h3",{attrs:{id:"create"}},[e._v("create")]),e._v(" "),t("p",[e._v("This is called only one time when database is created for first time.event is called with database as parameter. ")]),e._v(" "),t("pre",[t("code",[e._v('connection.on("create",(db)=>{\n    console.log("database created", db);\n});\n')])]),e._v(" "),t("h3",{attrs:{id:"upgrade"}},[e._v("upgrade")]),e._v(" "),t("p",[e._v("Called when database is upgraded. event is called with three parameter -")]),e._v(" "),t("ul",[t("li",[e._v("oldVersion")]),e._v(" "),t("li",[e._v("newVersion")]),e._v(" "),t("li",[e._v("database")])]),e._v(" "),t("pre",[t("code",[e._v('connection.on("upgrade",(oldVersion, newVersion, database)=>{\n    console.log(`database is upgraded from ${oldVersion} to ${newVersion} and database looks like`, database);\n});\n')])]),e._v(" "),t("h3",{attrs:{id:"requestqueueempty"}},[e._v("requestQueueEmpty")]),e._v(" "),t("p",[e._v("Fired when request queue is empty")]),e._v(" "),t("pre",[t("code",[e._v('connection.on("requestQueueEmpty",()=>{\n    console.log("request queue is empty);\n});\n')])]),e._v(" "),t("h3",{attrs:{id:"requestqueuefilled"}},[e._v("requestQueueFilled")]),e._v(" "),t("p",[e._v("Fired when request queue is filled. Basically when fired when length of request queue is one i.e for first request")]),e._v(" "),t("pre",[t("code",[e._v('connection.on("requestQueueFilled",()=>{\n    console.log("request queue is filled");\n});\n')])])])}),[],!1,null,null,null);n.default=component.exports}}]);