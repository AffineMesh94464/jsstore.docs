(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{220:function(e,t,n){"use strict";n.r(t);var o={components:{Layout:n(172).a}},r=n(14),component=Object(r.a)(o,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("Layout",{attrs:{title:"Change Table Schema",description:"how to change table schema after database is created",keywords:"change, table, schema, database, indexeddb",contentSrc:"/home/travis/build/ujjwalguptaofficial/jsstore.docs/out/content/tutorial/change-table-design.md"}},[n("p",[e._v("In order to change your table schema, you need to add an extra property 'version' with a value greater than current Db Version.")]),e._v(" "),n("h4",{attrs:{id:"example"}},[e._v("Example")]),e._v(" "),n("p",[e._v("Change the version in your table schema")]),e._v(" "),n("pre",[n("code",[e._v("var table1 = {\n    name: \"table_name\",\n     columns: {\n        column1: { dataType: 'datatype', primaryKey: true },\n        column2 : { dataType: 'datatype'},\n        ..... ,\n        columnN: { dataType: 'datatype' }\n    },\n    version: 2 //Default version is 1.\n}\n")])]),e._v(" "),n("h2",{attrs:{id:"howtogetcurrentdbversion"}},[e._v("How to get current db version")]),e._v(" "),n("p",[e._v("you can also find your current db version in indexedDb section of browser development tools.")]),e._v(" "),n("p",[n("img",{staticStyle:{"max-width":"100%"},attrs:{src:"/img/version_screenshot.png"}})]),e._v(" "),n("h2",{attrs:{id:"whatistheneedofdbversion"}},[e._v("What is the need of db version")]),e._v(" "),n("p",[n("br"),e._v("\nIndexedDb is a database technology for browser which means if you do some changes in your web application , any one who use your web app should get latest changes including database changes. ")]),e._v(" "),n("p",[e._v("Browser decides to change db schema when indexedb is initiated with db version greater than current db version.")]),e._v(" "),n("h2",{attrs:{id:"whathappenstodatawhenschemaischanged"}},[e._v("What happens to data when schema is changed")]),e._v(" "),n("p",[n("br"),e._v("\nAll table is recreated when there is database schema change but JsStore deletes only those tables which version is changed. ")]),e._v(" "),n("div",{staticClass:"highlight"},[e._v("\nSo table which does not have schema changes will have no effect but table which have schema changes - means table will be recreated and all data inside it will be lost.\n")]),e._v(" "),n("p",[n("br")]),e._v(" "),n("h3",{attrs:{id:"howdoipreservemydatafortablewhichhasschemachanges"}},[e._v("How do i preserve my data for table which has schema changes")]),e._v(" "),n("p",[n("br"),e._v("\nBefore calling "),n("code",[e._v("initDb")]),e._v(" api with new db schema changes, select all data from a table and then insert it after the connection is initiated.")]),e._v(" "),n("p",[e._v("e.g - ")]),e._v(" "),n("pre",[n("code",[e._v("async function changeDbSchema() {\n    var allData = await connection.select({\n        from:`{tableName}`\n    });\n\n    var isDbCreated = await connection.initDb(newDbSchema);\n    if(isDbCreated){\n        await connection.insert({\n            into:`{tableName}`\n        })\n    }\n}\n\n// should be called after connection is initiated with old schema\nchangeDbSchema();\n")])])])}),[],!1,null,null,null);t.default=component.exports}}]);