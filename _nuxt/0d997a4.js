(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{199:function(e,n,r){"use strict";r.r(n);var t={components:{Layout:r(172).a}},d=r(14),component=Object(d.a)(t,(function(){var e=this,n=e.$createElement,r=e._self._c||n;return r("Layout",{attrs:{title:"Middleware",description:"Middleware can be used to modify queries or result",keywords:"middleware, plugin, indexeddb, jsstore",contentSrc:"/home/runner/work/jsstore.docs/jsstore.docs/content/tutorial/middleware.md"}},[r("p",[e._v("Middleware is a function which has access to request query, result.They are called for each request in the same order as defined.")]),e._v(" "),r("p",[e._v("Middleware can be used to listen to each query and modify if necessary.")]),e._v(" "),r("p",[e._v("e.g - Let's say i want to encode my data when being inserted to make sure its not readable or for security purpose and decode when being fetched.")]),e._v(" "),r("h2",{attrs:{id:"createmiddleware"}},[e._v("Create Middleware")]),e._v(" "),r("pre",[r("code",[e._v("var connection = new JsStore.Connection();\nconst encryptMiddleware = function (request) {\n\n    const query = request.query\n\n    if(request.name == 'insert' && query.encrypt){\n\n        encryptData(query)\n\n    }\n    else if(request.name == 'select' && query.decrypt){\n        // result will be encrypted, so let's wait for result and then decrypt data\n\n        request.onResult((result)=>{\n            decryptData(result);\n        })\n\n    }\n};\n")])]),e._v(" "),r("h3",{attrs:{id:"register"}},[e._v("Register")]),e._v(" "),r("p",[e._v("middleware can be register both in main thread or worker.")]),e._v(" "),r("h4",{attrs:{id:"main"}},[e._v("main")]),e._v(" "),r("pre",[r("code",[e._v("connection.addMiddleware(encryptMiddleware);\n")])]),e._v(" "),r("h4",{attrs:{id:"worker"}},[e._v("worker")]),e._v(" "),r("pre",[r("code",[e._v("connection.addMiddleware(encryptMiddleware, true);\n")])]),e._v(" "),r("p",[e._v("now middleware is registered and can be used. Let's call insert api")]),e._v(" "),r("pre",[r("code",[e._v("connection.insert({\n    into:\"my_secure_table\"\n    values:[{\n        password:'12345'\n    }],\n    // some extra information can be provided\n    encrypt: true\n})\n")])]),e._v(" "),r("p",[e._v("similary data can be decoded by the middleware -")]),e._v(" "),r("pre",[r("code",[e._v('connection.select({\n    from:"my_secure_table"\n    decrypt: true\n})\n')])]),e._v(" "),r("p",[e._v("Middleware can be also created and provided as package using "),r("a",{attrs:{href:"/tutorial/plugin"}},[e._v("plugin")]),e._v(".")])])}),[],!1,null,null,null);n.default=component.exports}}]);