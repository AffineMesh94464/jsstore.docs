(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{192:function(e,t,r){"use strict";r.r(t);var o={components:{Layout:r(172).a}},n=r(14),component=Object(n.a)(o,(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("Layout",{attrs:{title:"Order By",description:"learn how to use order data in indexeddb",keywords:"order by, sort by, select, indexeddb, jsstore",contentSrc:"/home/travis/build/ujjwalguptaofficial/jsstore.docs/out/content/tutorial/select/order-by.md"}},[r("p",[e._v("Order By is used to sort the data in ascending or descending order, based on any column.")]),e._v(" "),r("h4",{attrs:{id:"sql"}},[e._v("Sql")]),e._v(" "),r("pre",[r("code",[e._v("Select * from Table_Name Order by column_name sort_type;\n")])]),e._v(" "),r("h4",{attrs:{id:"jsstore"}},[e._v("JsStore")]),e._v(" "),r("pre",[r("code",[e._v('var results = await connection.select({\n    from: "Table_Name",\n    order: {\n        by: column_name,\n        type: sort_type //supprted sort type is - asc,desc\n    }\n});\n//results will be array of objects.\nconsole.log(results);\n')])]),e._v(" "),r("p",[e._v("Option order has following properties -  ")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("by: string; // sorting column name")])]),e._v(" "),r("li",[r("p",[e._v("type: string; // sorting type - asc/desc, default is asc")])]),e._v(" "),r("li",[r("p",[e._v("idbSorting: boolean // whether to do sorting by indexeddb or by jsstore, default - true")])])]),e._v(" "),r("p",{staticClass:"margin-top-40px text-center"},[r("a",{staticClass:"btn info",attrs:{target:"_blank",href:"https://ujjwalguptaofficial.github.io/idbstudio/?db=Demo&query=select(%7B%0A%20%20%20%20from%3A%20%22Customers%22%2C%0A%20%20%20%20order%3A%20%7B%0A%20%20%20%20%20%20%20%20by%3A%20'country'%2C%0A%20%20%20%20%20%20%20%20type%3A%20%22desc%22%0A%20%20%20%20%7D%0A%7D)%3B%0A"}},[e._v("Example")])]),e._v(" "),r("h2",{attrs:{id:"orderbymultiplecolumn"}},[e._v("Order by multiple column")]),e._v(" "),r("p",[r("br"),e._v("For ordering by multiple column - you need to provide all order object value in an array")]),e._v(" "),r("pre",[r("code",[e._v('var results = await connection.select({\n    from: "Table_Name",\n    order: [{\n        by: column_name1,\n        type: sort_type //supprted sort type is - asc,desc\n    },\n    {\n        by: column_name2,\n        type: sort_type //supprted sort type is - asc,desc\n    }]\n});\n//results will be array of objects.\nconsole.log(results);\n')])]),e._v(" "),r("p",{staticClass:"margin-top-40px text-center"},[r("a",{staticClass:"btn info",attrs:{target:"_blank",href:"https://ujjwalguptaofficial.github.io/idbstudio/?db=Demo&query=select(%7B%0A%20%20%20%20from%3A%20%22Customers%22%2C%0A%20%20%20%20order%3A%20%5B%7B%0A%20%20%20%20%20%20%20%20by%3A%20'country'%2C%0A%20%20%20%20%7D%2C%20%7B%0A%20%20%20%20%20%20%20%20by%3A%20'city'%0A%20%20%20%20%7D%5D%0A%7D)%3B"}},[e._v("Example")])]),e._v(" "),r("h2",{attrs:{id:"orderbywhenusingjoin"}},[e._v("Order by when using join")]),e._v(" "),r("p",[r("br"),e._v("\nUnlike query without join, order here is little different. You need to provide query along with table name in the form of [tablename].[columnName] ")]),e._v(" "),r("p",[e._v("e.g - ")]),e._v(" "),r("pre",[r("code",[e._v('select({\n    from: "Student",\n    join: {\n        with: "StudentDetail",\n        on: "Student.Name=StudentDetail.Name"\n    },\n    order: { by: \'Student.Order\', type: \'asc\' }\n})\n')])]),e._v(" "),r("p",{staticClass:"margin-top-40px text-center"},[r("a",{staticClass:"btn info",attrs:{target:"_blank",href:"https://ujjwalguptaofficial.github.io/idbstudio/?db=Demo&query=select(%7B%0A%20%20%20%20from%3A%20'Orders'%2C%0A%20%20%20%20join%3A%20%7B%0A%20%20%20%20%20%20%20%20with%3A%20'OrderDetails'%2C%0A%20%20%20%20%20%20%20%20on%3A%20'Orders.orderId%3DOrderDetails.orderId'%0A%20%20%20%20%7D%2C%0A%20%20%20%20order%3A%20%7B%0A%20%20%20%20%20%20%20%20by%3A%20'OrderDetails.orderId'%0A%20%20%20%20%7D%0A%7D)"}},[e._v("Example")])])])}),[],!1,null,null,null);t.default=component.exports}}]);