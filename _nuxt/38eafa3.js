(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{197:function(t,e,o){"use strict";o.r(e);var n={components:{Layout:o(172).a}},r=o(14),component=Object(r.a)(n,(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("Layout",{attrs:{title:"Distinct",description:"Distinct is used to return unique set of results.",keywords:"distinct, select, query, indexeddb, jsstore",contentSrc:"/home/travis/build/ujjwalguptaofficial/jsstore.docs/out/content/tutorial/select/distinct.md"}},[o("p",[t._v("Distinct is used to return the unique set of result. Distinct filters the result for all columns together except Primary column, since Primary column will make the result always unique.")]),t._v(" "),o("p",[o("strong",[t._v("Note :-")]),t._v(" If you want to return the distinct results based on some columns, then you should use GroupBy.")]),t._v(" "),o("h4",{attrs:{id:"sqlwhere"}},[t._v("Sql (Where)")]),t._v(" "),o("pre",[o("code",[t._v("Select Distinct * From Table_Name;\n")])]),t._v(" "),o("h4",{attrs:{id:"jsstore"}},[t._v("JsStore")]),t._v(" "),o("pre",[o("code",[t._v('const results = await connection.select({\n    from: "Table_Name",\n    distinct: true, // optional boolean value - default false\n})\n\n //results will be array of objects.\nconsole.log(results);\n')])]),t._v(" "),o("p",{staticClass:"margin-top-40px text-center"},[o("a",{staticClass:"btn info",attrs:{target:"_blank",href:"https://ujjwalguptaofficial.github.io/idbstudio/?db=Demo&query=select(%7B%0A%20%20%20%20from%3A%20%22Customers%22%2C%0A%20%20%20%20distinct%3Atrue%20%2F%2F%20boolean%20value%0A%7D)%3B%0A"}},[t._v("Example")])])])}),[],!1,null,null,null);e.default=component.exports}}]);